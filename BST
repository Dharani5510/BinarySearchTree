import java.util.*;
public class Main
{
    static class Node{
    int data;
    Node left;
    Node right;
    Node(int data){
        this.data=data;
    }
}
    public static Node insert(Node root,int value){
        if(root==null){
            root=new Node(value);
            return root;
        }
        if(root.data<value){
            root.right=insert(root.right,value);
        }
        else if(root.data>value){
            root.left=insert(root.left,value);
        }
        return root;
    }
    public static void inorder(Node root){
        if(root==null){
            return;
        }
        inorder(root.left);
        System.out.print(root.data+" ");
        inorder(root.right);
    }
    public static void preorder(Node root){
        if(root==null){
            return;
        }
        System.out.print(root.data+" ");
        inorder(root.left);
        inorder(root.right);
    }
    public static void postorder(Node root){
        if(root==null){
            return;
        }
        inorder(root.left);
        inorder(root.right);
        System.out.print(root.data+" ");
    }
    public static int count(Node root){
        if(root==null){
            return 0;
        }
        int left=count(root.left);
        int right=count(root.right);
        return left+right+1;
    }
    public static int sum(Node root){
        if(root==null){
            return 0;
        }
        int left=sum(root.left);
        int right=sum(root.right);
        return left+right+root.data;
    }
    public static int height(Node root){
        if(root==null){
            return 0;
        }
        int left=height(root.left);
        int right=height(root.right);
        return Math.max(left,right)+1;
    }
    
    public static void search(Node root,int value){
        if(root==null){
         System.out.println("Not found");
        }
        else if(root.data==value){
          System.out.println("found");  
        }
        else if(root.data<value){
            search(root.right,value);
        }
         else if(root.data>value){
            search(root.left,value);
        }
    }

	public static void main(String[] args) {
		int values[]={5,1,3,4,2,7};
		Node root=null;
		for(int i=0;i<values.length;i++){
		  root=insert(root,values[i]);  
		}
		inorder(root);
		System.out.println();
		preorder(root);
		System.out.println();
		postorder(root);
		System.out.println();
		search(root,8);
		System.out.println(count(root));
		System.out.println(sum(root));
		System.out.println(height(root));
	}
}
